?start : newicklist

newicklist : newicktree+

newicktree : node ";"

node :  children? nodename? annotations?

children : "(" (node ",")* node ")"

nodename : quoted_escaped_string
         | NODENAME_STRING

NODENAME_STRING : /[^:\[\](),\;\n\r\0]+/

annotations : ":" (support extendedannotation?
                   |extendedannotation support?)
            | extendedannotation (":"? support)?

support : NUMBER

extendedannotation : "[" ["&"+ "NHX"? ":"?] annotationlist "]"

//annotationlist : annotation (":" annotation)*
//               | annotation ("," annotation)*


annotationlist : (annotation ":")* annotation
               | (annotation ",")* annotation

annotation : annotationname "=" data

annotationname : CNAME

// lists with separator | may not be nested, but lists with directional
// delimeters may be, so they're defined separately:
data : list | bar_sep_list | standalone_dtype

bar_sep_list : bar_list_dtype ("|" bar_list_dtype)+

standalone_dtype : number | quoted_escaped_string | STANDALONE_DATA_STRING

STANDALONE_DATA_STRING : /[^ :,\[\]{}\(\)|]+/

list : "[" (list_data ",")* list_data "]"
     | "(" (list_data ",")* list_data ")"
     | "{" (list_data ",")* list_data "}"

bar_list_dtype : number | quoted_escaped_string | BAR_SEP_STRING
BAR_SEP_STRING : /[^,:\[\]|{}]+/

list_data : list | list_dtype

list_dtype : number | quoted_escaped_string | LIST_DATA_STRING
LIST_DATA_STRING : /[^ ,:\(\)\[\]{}]+/

number : NUMBER

quoted_escaped_string : ESCAPED_SINGLE_QUOTE_STRING
                       | ESCAPED_DOUBLE_QUOTE_STRING

_STRING_INNER: /.*?/
_STRING_ESC_INNER: _STRING_INNER /(?<!\\)(\\\\)*?/

ESCAPED_DOUBLE_QUOTE_STRING : "\"" _STRING_ESC_INNER "\""
ESCAPED_SINGLE_QUOTE_STRING : "\'" _STRING_ESC_INNER "\'"

%import common.CNAME
%import common.NUMBER
%import common.WS
%import common.WS_INLINE
%ignore WS
%ignore WS_INLINE
